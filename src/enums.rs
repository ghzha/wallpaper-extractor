use num_enum::{IntoPrimitive, TryFromPrimitive};

#[derive(Debug, Eq, PartialEq, TryFromPrimitive, Clone)]
#[repr(u32)]
pub enum TexFormat {
    RGBA8888 = 0,
    DXT5 = 4,
    DXT3 = 6,
    DXT1 = 7,
    RG88 = 8,
    R8 = 9,
}
#[derive(Debug, Eq, PartialEq, TryFromPrimitive, IntoPrimitive, Clone)]
#[repr(u32)]
pub enum MipmapFormat {
    Invalid = 0,
    RGBA8888 = 1,
    R8 = 2,
    RG88 = 3,
    CompressedDXT5,
    CompressedDXT3,
    CompressedDXT1,
    ImageBMP = 1000,
    ImageICO,
    ImageJPEG,
    ImageJNG,
    ImageKOALA,
    ImageLBM,
    ImageIFF,
    ImageMNG,
    ImagePBM,
    ImagePBMRAW,
    ImagePCD,
    ImagePCX,
    ImagePGM,
    ImagePGMRAW,
    ImagePNG,
    ImagePPM,
    ImagePPMRAW,
    ImageRAS,
    ImageTARGA,
    ImageTIFF,
    ImageWBMP,
    ImagePSD,
    ImageCUT,
    ImageXBM,
    ImageXPM,
    ImageDDS,
    ImageGIF,
    ImageHDR,
    ImageFAXG3,
    ImageSGI,
    ImageEXR,
    ImageJ2K,
    ImageJP2,
    ImagePFM,
    ImagePICT,
    ImageRAW,
}
#[allow(non_camel_case_types)]
#[derive(Debug, Eq, PartialEq, TryFromPrimitive)]
#[repr(i32)]
pub enum FreeImageFormat {
    FIF_UNKNOWN = -1,
    FIF_BMP = 0,
    FIF_ICO = 1,
    FIF_JPEG = 2,
    FIF_JNG = 3,
    FIF_KOALA = 4,
    FIF_LBM = 5,
    FIF_MNG = 6,
    FIF_PBM = 7,
    FIF_PBMRAW = 8,
    FIF_PCD = 9,
    FIF_PCX = 10,
    FIF_PGM = 11,
    FIF_PGMRAW = 12,
    FIF_PNG = 13,
    FIF_PPM = 14,
    FIF_PPMRAW = 15,
    FIF_RAS = 16,
    FIF_TARGA = 17,
    FIF_TIFF = 18,
    FIF_WBMP = 19,
    FIF_PSD = 20,
    FIF_CUT = 21,
    FIF_XBM = 22,
    FIF_XPM = 23,
    FIF_DDS = 24,
    FIF_GIF = 25,
    FIF_HDR = 26,
    FIF_FAXG3 = 27,
    FIF_SGI = 28,
    FIF_EXR = 29,
    FIF_J2K = 30,
    FIF_JP2 = 31,
    FIF_PFM = 32,
    FIF_PICT = 33,
    FIF_RAW = 34,
}
#[derive(Debug, Eq, PartialEq, TryFromPrimitive)]
#[repr(i32)]
pub enum TexFlags {
    None = 0,
    NoInterpolation = 1,
    ClampUVs = 2,
    IsGif = 4,
    // Placeholders
    Unk3 = 8,
    Unk4 = 16,
    Unk5 = 32,
    Unk6 = 64,
    Unk7 = 128,
}

pub fn image2mipmap(free_image_format: &FreeImageFormat) -> MipmapFormat {
    match free_image_format {
        FreeImageFormat::FIF_UNKNOWN => {
            panic!("Can't convert '{:?}' to 'MipmapFormat'", free_image_format)
        }
        FreeImageFormat::FIF_BMP => MipmapFormat::ImageBMP,
        FreeImageFormat::FIF_ICO => MipmapFormat::ImageICO,
        FreeImageFormat::FIF_JPEG => MipmapFormat::ImageJPEG,
        FreeImageFormat::FIF_JNG => MipmapFormat::ImageJNG,
        FreeImageFormat::FIF_KOALA => MipmapFormat::ImageKOALA,
        FreeImageFormat::FIF_LBM => MipmapFormat::ImageLBM,
        FreeImageFormat::FIF_MNG => MipmapFormat::ImageMNG,
        FreeImageFormat::FIF_PBM => MipmapFormat::ImagePBM,
        FreeImageFormat::FIF_PBMRAW => MipmapFormat::ImagePBMRAW,
        FreeImageFormat::FIF_PCD => MipmapFormat::ImagePCD,
        FreeImageFormat::FIF_PCX => MipmapFormat::ImagePCX,
        FreeImageFormat::FIF_PGM => MipmapFormat::ImagePGM,
        FreeImageFormat::FIF_PGMRAW => MipmapFormat::ImagePGMRAW,
        FreeImageFormat::FIF_PNG => MipmapFormat::ImagePNG,
        FreeImageFormat::FIF_PPM => MipmapFormat::ImagePPM,
        FreeImageFormat::FIF_PPMRAW => MipmapFormat::ImagePPMRAW,
        FreeImageFormat::FIF_RAS => MipmapFormat::ImageRAS,
        FreeImageFormat::FIF_TARGA => MipmapFormat::ImageTARGA,
        FreeImageFormat::FIF_TIFF => MipmapFormat::ImageTIFF,
        FreeImageFormat::FIF_WBMP => MipmapFormat::ImageWBMP,
        FreeImageFormat::FIF_PSD => MipmapFormat::ImagePSD,
        FreeImageFormat::FIF_CUT => MipmapFormat::ImageCUT,
        FreeImageFormat::FIF_XBM => MipmapFormat::ImageXBM,
        FreeImageFormat::FIF_XPM => MipmapFormat::ImageXPM,
        FreeImageFormat::FIF_DDS => MipmapFormat::ImageDDS,
        FreeImageFormat::FIF_GIF => MipmapFormat::ImageGIF,
        FreeImageFormat::FIF_HDR => MipmapFormat::ImageHDR,
        FreeImageFormat::FIF_FAXG3 => MipmapFormat::ImageFAXG3,
        FreeImageFormat::FIF_SGI => MipmapFormat::ImageSGI,
        FreeImageFormat::FIF_EXR => MipmapFormat::ImageEXR,
        FreeImageFormat::FIF_J2K => MipmapFormat::ImageJ2K,
        FreeImageFormat::FIF_JP2 => MipmapFormat::ImageJP2,
        FreeImageFormat::FIF_PFM => MipmapFormat::ImagePFM,
        FreeImageFormat::FIF_PICT => MipmapFormat::ImagePICT,
        FreeImageFormat::FIF_RAW => MipmapFormat::ImageRAW,
    }
}
